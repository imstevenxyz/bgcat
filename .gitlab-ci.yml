include:
    - project: orchestration.imsteven.xyz/cicd-templates
      ref: v0.0.3
      file: templates/buildah.yml

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID != null && $CI_MERGE_REQUEST_TITLE !~ /Draft:/
      changes:
        compare_to: main
        paths:
          - .gitlab-ci.yml
          - container/*
          - src/*
          - Cargo.toml
          - Cargo.lock
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

stages:
  - build
  - build-image
  - release

variables:
  IMAGE_NAME: "lib/bgcat"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  DOCKER_ARCHIVE: "$CI_PROJECT_DIR/images"
  GITLAB_PKG_REG: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/bgcat"

build:
  stage: build
  image: rust:1.69.0-slim
  variables:
    TARGETS: "x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu"
    CARGO_HOME: $CI_PROJECT_DIR/cargo
  artifacts:
    expire_in: 30m
    paths:
      - $CI_PROJECT_DIR/builds/*/release/bgcat
  cache:
    key: cargo-build
    paths:
      - $CI_PROJECT_DIR/builds
      - $CI_PROJECT_DIR/cargo/registry
      - $CI_PROJECT_DIR/cargo/git
  before_script:
    - apt-get update
    - apt-get install -y gcc-aarch64-linux-gnu
    - rustup target add $TARGETS
  script:
    - |
      for TARGET in $TARGETS; do
        cargo build --release --target $TARGET --target-dir $CI_PROJECT_DIR/builds/
      done

image-build:
  extends:
    - .buildah-build
  stage: build-image
  needs:
    - job: build
      artifacts: true
  variables:
    BUILDAH_ARCH: "amd64,arm64"
    BUILDAH_BUILD_OPT: "-f container/Containerfile"
  before_script:
    - mkdir -p ${DOCKER_ARCHIVE}
    - ln -sr builds/x86_64-unknown-linux-gnu builds/amd64
    - ln -sr builds/aarch64-unknown-linux-gnu builds/arm64

image-push:
  extends:
    - .buildah-push
  stage: release
  needs:
    - job: image-build
      artifacts: true
  variables:
    BUILDAH_ARCH: "amd64,arm64"
    BUILDAH_EXTRA_TAGS: "$CI_COMMIT_TAG,$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
    BUILDAH_PUSH_LATEST_ON_TAG: "$CI_COMMIT_TAG"

package:
  stage: release
  image: alpine:3.18
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build
      artifacts: true
  variables:
    PKG_ARCH: "amd64,arm64"
  artifacts:
    expire_in: 30m
    paths:
      - $CI_PROJECT_DIR/artifacts
  before_script:
    - apk add curl
    - mkdir -p data/assets artifacts
    - ln -s x86_64-unknown-linux-gnu builds/amd64
    - ln -s aarch64-unknown-linux-gnu builds/arm64
  script:
    - |
      for ARCH in ${PKG_ARCH//,/ }; do
        PKG_NAME="bgcat_${CI_COMMIT_TAG}_${ARCH}.tgz"
        mv builds/$ARCH/release/bgcat .
        tar -czf artifacts/${PKG_NAME} bgcat bgcat.toml LICENSE README.adoc static/ templates/ data/
        curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file artifacts/${PKG_NAME} "${GITLAB_PKG_REG}/${CI_COMMIT_TAG}/${PKG_NAME}"
      done

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: package
  script:
    - echo "Creating release on gitlab for tag $CI_COMMIT_TAG"
  release:
    name: "BGCat Release $CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG"
    assets:
      links:
        - name: "BGCat_${CI_COMMIT_TAG}_amd64.tgz"
          url: "${GITLAB_PKG_REG}/${CI_COMMIT_TAG}/bgcat_${CI_COMMIT_TAG}_amd64.tgz"
        - name: "BGCat_${CI_COMMIT_TAG}_arm64.tgz"
          url: "${GITLAB_PKG_REG}/${CI_COMMIT_TAG}/bgcat_${CI_COMMIT_TAG}_arm64.tgz"